name: HAT-L_SRx4_ImageNet-pretrain
model_type: HATModel
scale: 4
num_gpu: auto # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  # test_1: # the 1st test dataset
  #   name: Set5
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/benchmark/Set5/HR
  #   dataroot_lq: ../Data/benchmark/Set5/LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # test_2: # the 1st test dataset
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/benchmark/Set14/HR
  #   dataroot_lq: ../Data/benchmark/Set14/LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # test_3:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/benchmark/Urban100/HR
  #   dataroot_lq: ../Data/benchmark/Urban100/LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # test_4:
  #   name: B100
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/benchmark/B100/HR
  #   dataroot_lq: ../Data/benchmark/B100/LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # test_5:
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/benchmark/Manga109/HR
  #   dataroot_lq: ../Data/benchmark/Manga109/LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # test_6:
  #   name: DIV2K diffcult
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/DIV2K/DIV2K_valid_HR
  #   dataroot_lq: ../Data/DIV2K/DIV2K_valid_LR_difficult
  #   io_backend:
  #     type: disk

  # test_7:
  #   name: DIV2K mild
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/DIV2K/DIV2K_valid_HR
  #   dataroot_lq: ../Data/DIV2K/DIV2K_valid_LR_mild
  #   io_backend:
  #     type: disk

  # test_8:
  #   name: DIV2K wild
  #   type: PairedImageDataset
  #   dataroot_gt: ../Data/DIV2K/DIV2K_valid_HR
  #   dataroot_lq: ../Data/DIV2K/DIV2K_valid_LR_wild
  #   io_backend:
  #     type: disk

  test_9:
    name: portrait-bicubic
    type: PairedImageDataset
    dataroot_gt: ../Data/portrait/HR
    dataroot_lq: ../Data/portrait/LR/bicubic
    io_backend:
      type: disk

  test_10:
    name: portrait-gaussian_blur
    type: PairedImageDataset
    dataroot_gt: ../Data/portrait/HR
    dataroot_lq: ../Data/portrait/LR/gaussian_blur
    io_backend:
      type: disk
  
  test_11:
    name: portrait-gaussian_noise
    type: PairedImageDataset
    dataroot_gt: ../Data/portrait/HR
    dataroot_lq: ../Data/portrait/LR/gaussian_noise
    io_backend:
      type: disk

  test_12:
    name: portrait-motion_blurs
    type: PairedImageDataset
    dataroot_gt: ../Data/portrait/HR
    dataroot_lq: ../Data/portrait/LR/motion_blur
    io_backend:
      type: disk

# network structures
network_g:
  type: HAT
  upscale: 4
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: "pixelshuffle"
  resi_connection: "1conv"

# path
path:
  pretrain_network_g: ./experiments/pretrained_models/HAT-L_SRx4_ImageNet-pretrain.pth
  strict_load_g: true
  param_key_g: "params_ema"

# validation settings
val:
  save_img: true
  suffix: ~ # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
    lpips: # metric name, can be arbitrary
      type: calculate_lpips
      crop_border: 4
